// „Éï„Ç©„Éº„Ç´„ÇπÁÆ°ÁêÜ„É¢„Ç∏„É•„Éº„É´ - ÁîªÈù¢Âàá„ÇäÊõø„ÅàÊôÇ„ÅÆÂàùÊúü„Éï„Ç©„Éº„Ç´„ÇπÂà∂Âæ°

/**
 * „Éì„É•„ÉºÂàá„ÇäÊõø„ÅàÊôÇ„Å´ÈÅ©Âàá„Å™Ë¶ÅÁ¥†„Å´Ëá™Âãï„Éï„Ç©„Éº„Ç´„Çπ„ÇíË®≠ÂÆö„Åô„Çã„ÇØ„É©„Çπ
 */
export class FocusManager {
  constructor() {
    // „Éï„Ç©„Éº„Ç´„ÇπË®≠ÂÆö„ÅÆÈÅÖÂª∂ÊôÇÈñìÔºà„Éì„É•„ÉºÂàá„ÇäÊõø„Åà„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ËÄÉÊÖÆÔºâ
    this.focusDelay = 100;
    
    // „Éï„Ç©„Éº„Ç´„ÇπÂèØËÉΩ„Å™Ë¶ÅÁ¥†„ÅÆ„Çª„É¨„ÇØ„Çø
    this.focusableElementsSelector = [
      'button:not([disabled])',
      'input:not([disabled])',
      'select:not([disabled])',
      'textarea:not([disabled])',
      'a[href]',
      'area[href]',
      'summary',
      '[tabindex]:not([tabindex="-1"]):not([disabled])',
      'details:not([disabled])',
      '[contenteditable="true"]'
    ].join(', ');
  }

  /**
   * ÊåáÂÆö„Åï„Çå„Åü„Éì„É•„Éº„ÅÆÈÅ©Âàá„Å™Ë¶ÅÁ¥†„Å´„Éï„Ç©„Éº„Ç´„Çπ„ÇíË®≠ÂÆö
   * @param {string} viewName - „Éï„Ç©„Éº„Ç´„Çπ„ÇíË®≠ÂÆö„Åô„Çã„Éì„É•„ÉºÂêç
   */
  setInitialFocus(viewName) {
    // „Éì„É•„ÉºÂàá„ÇäÊõø„Åà„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÅÆÂÆå‰∫Ü„ÇíÂæÖ„Å£„Å¶„Åã„Çâ„Éï„Ç©„Éº„Ç´„ÇπË®≠ÂÆö
    setTimeout(() => {
      const viewContainer = document.getElementById(`view-${viewName}`);
      
      if (!viewContainer) {
        console.warn(`View container not found: view-${viewName}`);
        return;
      }

      // nav-tabs‰ª•Â§ñ„ÅÆÂÖàÈ†≠„ÅÆ„Éï„Ç©„Éº„Ç´„ÇπÂèØËÉΩË¶ÅÁ¥†„ÇíÊ§úÁ¥¢
      const firstFocusableElement = this.findFirstFocusableElement(viewContainer);
      
      if (firstFocusableElement) {
        try {
          firstFocusableElement.focus();
          console.log(`Focus set to first focusable element in view: ${viewName}`, firstFocusableElement);
        } catch (error) {
          console.error(`Failed to set focus on element in view: ${viewName}`, error);
        }
      } else {
        console.warn(`No focusable element found in view: ${viewName}`);
      }
    }, this.focusDelay);
  }

  /**
   * ÊåáÂÆö„Åï„Çå„Åü„Ç≥„É≥„ÉÜ„ÉäÂÜÖ„Åßnav-tabs‰ª•Â§ñ„ÅÆÂÖàÈ†≠„ÅÆ„Éï„Ç©„Éº„Ç´„ÇπÂèØËÉΩË¶ÅÁ¥†„ÇíÊ§úÁ¥¢
   * @param {Element} container - Ê§úÁ¥¢ÂØæË±°„ÅÆ„Ç≥„É≥„ÉÜ„ÉäË¶ÅÁ¥†
   * @returns {Element|null} ÊúÄÂàù„ÅÆ„Éï„Ç©„Éº„Ç´„ÇπÂèØËÉΩË¶ÅÁ¥†„Åæ„Åü„ÅØnull
   */
  findFirstFocusableElement(container) {
    // „Ç≥„É≥„ÉÜ„ÉäÂÜÖ„ÅÆ„Åô„Åπ„Å¶„ÅÆ„Éï„Ç©„Éº„Ç´„ÇπÂèØËÉΩË¶ÅÁ¥†„ÇíÂèñÂæó
    const focusableElements = container.querySelectorAll(this.focusableElementsSelector);
    
    for (const element of focusableElements) {
      // nav-tabs„ÅÆÂ≠êË¶ÅÁ¥†„Åæ„Åü„ÅØnav-tabsËá™‰Ωì„ÅØÈô§Â§ñ
      if (this.isWithinNavTabs(element)) {
        continue;
      }
      
      // Ë¶ÅÁ¥†„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ
      if (this.isElementVisible(element)) {
        return element;
      }
    }
    
    return null;
  }

  /**
   * Ë¶ÅÁ¥†„Åånav-tabsÂÜÖ„Å´„ÅÇ„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ
   * @param {Element} element - „ÉÅ„Çß„ÉÉ„ÇØ„Åô„ÇãË¶ÅÁ¥†
   * @returns {boolean} nav-tabsÂÜÖ„ÅÆË¶ÅÁ¥†„ÅÆÂ†¥Âêàtrue
   */
  isWithinNavTabs(element) {
    return element.closest('.nav-tabs') !== null || 
           element.classList.contains('nav-tabs') || 
           element.classList.contains('nav-tab');
  }

  /**
   * Ë¶ÅÁ¥†„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ
   * @param {Element} element - „ÉÅ„Çß„ÉÉ„ÇØ„Åô„ÇãË¶ÅÁ¥†
   * @returns {boolean} Ë¶ÅÁ¥†„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„ÇãÂ†¥Âêàtrue
   */
  isElementVisible(element) {
    // Âü∫Êú¨ÁöÑ„Å™Ë°®Á§∫„ÉÅ„Çß„ÉÉ„ÇØ
    if (element.offsetWidth === 0 && element.offsetHeight === 0) {
      return false;
    }
    
    const style = window.getComputedStyle(element);
    return style.display !== 'none' && 
           style.visibility !== 'hidden' && 
           style.opacity !== '0';
  }

  /**
   * „Éï„Ç©„Éº„Ç´„ÇπË®≠ÂÆö„ÅÆÈÅÖÂª∂ÊôÇÈñì„ÇíÂ§âÊõ¥
   * @param {number} delay - ÈÅÖÂª∂ÊôÇÈñìÔºà„Éü„É™ÁßíÔºâ
   */
  setFocusDelay(delay) {
    this.focusDelay = delay;
    console.log(`Focus delay set to: ${delay}ms`);
  }

  /**
   * ÁèæÂú®„Éï„Ç©„Éº„Ç´„Çπ„Åï„Çå„Å¶„ÅÑ„ÇãË¶ÅÁ¥†„ÅÆÊÉÖÂ†±„ÇíÂèñÂæó
   * @returns {Object} „Éï„Ç©„Éº„Ç´„ÇπÊÉÖÂ†±
   */
  getCurrentFocusInfo() {
    const activeElement = document.activeElement;
    return {
      element: activeElement,
      tagName: activeElement ? activeElement.tagName : null,
      id: activeElement ? activeElement.id : null,
      className: activeElement ? activeElement.className : null,
      selector: this.getElementSelector(activeElement)
    };
  }

  /**
   * Ë¶ÅÁ¥†„ÅÆCSS„Çª„É¨„ÇØ„Çø„ÇíÁîüÊàê
   * @param {Element} element - Ë¶ÅÁ¥†
   * @returns {string} CSS„Çª„É¨„ÇØ„Çø
   */
  getElementSelector(element) {
    if (!element) return null;
    
    if (element.id) {
      return `#${element.id}`;
    }
    
    let selector = element.tagName.toLowerCase();
    if (element.className) {
      selector += '.' + element.className.split(' ').join('.');
    }
    
    return selector;
  }

  /**
   * ÊåáÂÆö„Éì„É•„Éº„ÅÆ„Éï„Ç©„Éº„Ç´„ÇπÂèØËÉΩË¶ÅÁ¥†„Çí„Éá„Éê„ÉÉ„Ç∞Âá∫Âäõ
   * @param {string} viewName - „Éì„É•„ÉºÂêç
   */
  debugFocusableElements(viewName) {
    const viewContainer = document.getElementById(`view-${viewName}`);
    if (!viewContainer) {
      console.warn(`View container not found for debug: view-${viewName}`);
      return;
    }

    const allFocusable = viewContainer.querySelectorAll(this.focusableElementsSelector);
    const filteredFocusable = Array.from(allFocusable).filter(el => 
      !this.isWithinNavTabs(el) && this.isElementVisible(el)
    );

    console.group(`üîç Focusable elements debug for view: ${viewName}`);
    console.log('All focusable elements:', allFocusable);
    console.log('Filtered focusable elements (excluding nav-tabs):', filteredFocusable);
    console.log('First focusable element:', filteredFocusable[0] || 'None found');
    console.groupEnd();
  }
}

// „Ç∞„É≠„Éº„Éê„É´„Ç§„É≥„Çπ„Çø„É≥„Çπ
export const focusManager = new FocusManager();
