name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]
  pull_request:
    types: [opened, synchronize]

jobs:
  claude:
    # @claude „Ç≥„É°„É≥„Éà„Åß„Éà„É™„Ç¨„Éº
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Claude Code
        id: claude_response
        uses: anthropics/claude-code-base-action@beta
        with:
          prompt: |
            You are an AI assistant helping with the queuelip project, a Tauri-based desktop application.
            
            Analyze the user's request and provide helpful assistance. If they're asking about code changes, 
            analyze the codebase and provide specific recommendations.
            
            Please respond in a friendly, helpful manner and provide actionable advice.
          allowed_tools: "Bash(git:*),View,GlobTool,GrepTool,BatchTool"
          max_turns: "8"
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

      - name: Post Claude Response as Comment
        if: success()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            
            // Get the execution log file path
            const logPath = process.env.CLAUDE_EXECUTION_LOG || '/tmp/claude-execution-output.json';
            
            let response = '';
            try {
              // Try to read the execution log
              if (fs.existsSync(logPath)) {
                const logContent = fs.readFileSync(logPath, 'utf8');
                const log = JSON.parse(logContent);
                response = log.result || log.response || 'Claude Code executed successfully, but no response was captured.';
              } else {
                response = 'ü§ñ Claude Code executed successfully! I analyzed your request and the codebase.';
              }
            } catch (error) {
              console.log('Error reading execution log:', error);
              response = 'ü§ñ Claude Code executed successfully! I analyzed your request and provided assistance.';
            }
            
            // Post the comment
            const comment = `ü§ñ **Claude Code Response**

${response}

---
*Powered by Claude Code via GitHub Actions*`;

            if (context.eventName === 'issues' || context.eventName === 'issue_comment') {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } else if (context.eventName === 'pull_request' || context.eventName === 'pull_request_review_comment') {
              await github.rest.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

  # Pull Request Ëá™Âãï„É¨„Éì„É•„Éº
  auto-review:
    if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Claude Code Review
        uses: anthropics/claude-code-base-action@beta
        with:
          prompt: |
            Review this pull request thoroughly:
            1. Code quality and JavaScript/Tauri best practices
            2. Potential bugs or security issues  
            3. Performance considerations
            4. Test coverage and documentation
            5. Adherence to project standards
            
            Provide constructive feedback with specific suggestions for improvement.
            Focus on maintainability and security.
          allowed_tools: "Bash(git:*),View,GlobTool,GrepTool,BatchTool"
          max_turns: "5"
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

  # È´òÂ∫¶„Å™Ê©üËÉΩÂÆüË£Ö
  claude-implement:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/claude-implement')) ||
      (github.event_name == 'issues' && contains(github.event.issue.body, '/claude-implement'))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Implement Feature with Claude
        uses: anthropics/claude-code-base-action@beta
        with:
          prompt: |
            Based on the issue description, implement the requested feature comprehensively:
            1. Analyze the existing codebase structure
            2. Implement the feature following project patterns (JavaScript/Tauri)
            3. Create or update tests as needed
            4. Update documentation if required
            5. Ensure backward compatibility
            
            Focus on creating production-ready, maintainable code.
          allowed_tools: "Bash(git:*),View,GlobTool,GrepTool,BatchTool,mcp__github__create_pull_request"
          max_turns: "15"
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}